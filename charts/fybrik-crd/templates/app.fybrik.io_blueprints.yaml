
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: blueprints.app.fybrik.io
spec:
  group: app.fybrik.io
  names:
    kind: Blueprint
    listKind: BlueprintList
    plural: blueprints
    singular: blueprint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.observedState.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Blueprint is the Schema for the blueprints API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BlueprintSpec defines the desired state of Blueprint, which defines the components of the workload's data path that run in a particular cluster.  In a single cluster environment there is one blueprint.  In a multi-cluster environment there is one Blueprint per cluster per workload (FybrikApplication).
            properties:
              cluster:
                description: Cluster indicates the cluster on which the Blueprint runs
                type: string
              modules:
                description: Modules is a list of modules that indicate the data path components that run in this cluster
                items:
                  description: BlueprintModule is a copy of a FybrikModule Custom Resource.  It contains the information necessary to instantiate a datapath component, including the parameters relevant for the particular workload.
                  properties:
                    api:
                      properties:
                        dataformat:
                          description: DataFormat defines the data format type
                          type: string
                        endpoint:
                          description: EndpointSpec is used both by the module creator and by the status of the fybrikapplication
                          properties:
                            hostname:
                              description: Always equals the release name. Can be omitted.
                              type: string
                            port:
                              format: int32
                              type: integer
                            scheme:
                              description: 'For example: http, https, grpc, grpc+tls, jdbc:oracle:thin:@ etc'
                              type: string
                          required:
                          - port
                          - scheme
                          type: object
                        protocol:
                          description: Protocol defines the interface protocol used for data transactions
                          type: string
                      required:
                      - endpoint
                      - protocol
                      type: object
                    assetIds:
                      description: assetIDs indicate the assets processed by this module.  Included so we can track asset status as well as module status in the future.
                      items:
                        type: string
                      type: array
                    chart:
                      description: Chart contains the location of the helm chart with info detailing how to deploy
                      properties:
                        name:
                          description: Name of helm chart
                          type: string
                        values:
                          additionalProperties:
                            type: string
                          description: Values to pass to helm chart installation
                          type: object
                      required:
                      - name
                      type: object
                    instanceName:
                      description: InstanceName is the unique name for the deployed instance related to this workload
                      type: string
                    moduleName:
                      type: string
                    name:
                      description: Name of the fybrikmodule on which this is based
                      type: string
                    serviceModule:
                      type: string
                    sinkAssets:
                      items:
                        properties:
                          actions:
                            description: Actions are different types of processing that may be done to the data as it is written.
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          assetId:
                            type: string
                          connection:
                            description: Connection has the relevant details for accesing the data (url, table, ssl, etc.)
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          format:
                            description: Format represents data format (e.g. parquet) as received from catalog connectors
                            type: string
                          vault:
                            additionalProperties:
                              description: Holds details for retrieving credentials from Vault store.
                              properties:
                                address:
                                  description: Address is Vault address
                                  type: string
                                authPath:
                                  description: AuthPath is the path to auth method i.e. kubernetes
                                  type: string
                                role:
                                  description: Role is the Vault role used for retrieving the credentials
                                  type: string
                                secretPath:
                                  description: SecretPath is the path of the secret holding the Credentials in Vault
                                  type: string
                              required:
                              - address
                              - authPath
                              - role
                              - secretPath
                              type: object
                            description: Credentials map. It may contain different credentials for read/write. That's why it's a map
                            type: object
                        required:
                        - assetId
                        - connection
                        - format
                        type: object
                      type: array
                    sourceAssets:
                      items:
                        properties:
                          actions:
                            description: Actions are different types of processing that may be done to the data as it is written.
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          assetId:
                            type: string
                          connection:
                            description: Connection has the relevant details for accesing the data (url, table, ssl, etc.)
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          format:
                            description: Format represents data format (e.g. parquet) as received from catalog connectors
                            type: string
                          vault:
                            additionalProperties:
                              description: Holds details for retrieving credentials from Vault store.
                              properties:
                                address:
                                  description: Address is Vault address
                                  type: string
                                authPath:
                                  description: AuthPath is the path to auth method i.e. kubernetes
                                  type: string
                                role:
                                  description: Role is the Vault role used for retrieving the credentials
                                  type: string
                                secretPath:
                                  description: SecretPath is the path of the secret holding the Credentials in Vault
                                  type: string
                              required:
                              - address
                              - authPath
                              - role
                              - secretPath
                              type: object
                            description: Credentials map. It may contain different credentials for read/write. That's why it's a map
                            type: object
                        required:
                        - assetId
                        - connection
                        - format
                        type: object
                      type: array
                  required:
                  - chart
                  - instanceName
                  - moduleName
                  - name
                  type: object
                type: array
            required:
            - cluster
            - modules
            type: object
          status:
            description: BlueprintStatus defines the observed state of Blueprint This includes readiness, error message, and indicators forthe Kubernetes resources owned by the Blueprint for cleanup and status monitoring
            properties:
              observedGeneration:
                description: ObservedGeneration is taken from the Blueprint metadata.  This is used to determine during reconcile whether reconcile was called because the desired state changed, or whether status of the allocated resources should be checked.
                format: int64
                type: integer
              observedState:
                description: ObservedState includes information to be reported back to the FybrikApplication resource It includes readiness and error indications, as well as user instructions
                properties:
                  dataAccessInstructions:
                    description: DataAccessInstructions indicate how the data user or his application may access the data. Instructions are available upon successful orchestration.
                    type: string
                  error:
                    description: Error indicates that there has been an error to orchestrate the modules and provides the error message
                    type: string
                  ready:
                    description: Ready represents that the modules have been orchestrated successfully and the data is ready for usage
                    type: boolean
                type: object
              releases:
                additionalProperties:
                  format: int64
                  type: integer
                description: Releases map each release to the observed generation of the blueprint containing this release. At the end of reconcile, each release should be mapped to the latest blueprint version or be uninstalled.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
